{"name": "test_get_image_invalid_id[23003df3-e509-4bc9-ad!@#,$%4b-5f77ad40da69]", "status": "broken", "statusDetails": {"message": "TypeError: No constructor defined", "trace": "self = <test_images.TestImages object at 0x000001E4D01C1D30>\nimage_obj = <api.api_requests.ImagesRequests object at 0x000001E4CFEB2930>\nimg_id = '23003df3-e509-4bc9-ad!@#,$%4b-5f77ad40da69'\n\n    @pytest.mark.parametrize(\n        \"img_id\", [\n            \"23003df3-e509-4bc9-ad4b-5f77ad40da69435\",\n            \"34523003df3-e509-4bc9-ad4b-5f77ad40da69\",\n            \"23003df3-e509-4b45c9-ad4b-5f77ad40da69\",\n            \"23003df3-e509-4bc9-ad4b-5f77ad40da69!@#?$\",\n            \"!@#.$%23003df3-e509-4bc9-ad4b-5f77ad40da69\",\n            \"23003df3-e509-4bc9-ad!@#,$%4b-5f77ad40da69\",\n            \"                                        \",\n            \"    23003df3-e509-4bc9-ad4b-5f77ad40da69\",\n            \"23003df3-e509-4bc9-ad4b-5f77ad40da69     \",\n            \"23003df3-e5 09-4 b c9-a d 4b-5f77  ad40da69\"]\n    )\n    def test_get_image_invalid_id(self, image_obj, img_id):\n        response = image_obj.get_image_by_id(img_id)\n    \n        BaseAssertion.assert_status_code(response, HTTPStatus.NOT_FOUND)\n        try:\n>           BaseAssertion.assert_schema(response, models.NotFound)\n\ntest_images.py:145: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\assertions\\assertion_base.py:17: in assert_schema\n    body = response.json()\n..\\..\\venv\\Lib\\site-packages\\httpx\\_models.py:764: in json\n    return jsonlib.loads(self.content, **kwargs)\nC:\\Users\\marat.galimov\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\nC:\\Users\\marat.galimov\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000001E4CCCBED80>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nC:\\Users\\marat.galimov\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\json\\decoder.py:355: JSONDecodeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_images.TestImages object at 0x000001E4D01C1D30>\nimage_obj = <api.api_requests.ImagesRequests object at 0x000001E4CFEB2930>\nimg_id = '23003df3-e509-4bc9-ad!@#,$%4b-5f77ad40da69'\n\n    @pytest.mark.parametrize(\n        \"img_id\", [\n            \"23003df3-e509-4bc9-ad4b-5f77ad40da69435\",\n            \"34523003df3-e509-4bc9-ad4b-5f77ad40da69\",\n            \"23003df3-e509-4b45c9-ad4b-5f77ad40da69\",\n            \"23003df3-e509-4bc9-ad4b-5f77ad40da69!@#?$\",\n            \"!@#.$%23003df3-e509-4bc9-ad4b-5f77ad40da69\",\n            \"23003df3-e509-4bc9-ad!@#,$%4b-5f77ad40da69\",\n            \"                                        \",\n            \"    23003df3-e509-4bc9-ad4b-5f77ad40da69\",\n            \"23003df3-e509-4bc9-ad4b-5f77ad40da69     \",\n            \"23003df3-e5 09-4 b c9-a d 4b-5f77  ad40da69\"]\n    )\n    def test_get_image_invalid_id(self, image_obj, img_id):\n        response = image_obj.get_image_by_id(img_id)\n    \n        BaseAssertion.assert_status_code(response, HTTPStatus.NOT_FOUND)\n        try:\n            BaseAssertion.assert_schema(response, models.NotFound)\n        except json.JSONDecodeError:\n            print(\"The response body does not match the model!\")\n>           raise ValidationError\nE           TypeError: No constructor defined\n\ntest_images.py:148: TypeError"}, "attachments": [{"name": "stdout", "source": "18ce14ea-4804-46d8-b23a-2a8c8c427be6-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "img_id", "value": "'23003df3-e509-4bc9-ad!@#,$%4b-5f77ad40da69'"}], "start": 1710319688908, "stop": 1710319689059, "uuid": "5af7afec-b986-4381-bfb2-7dad0a4e9d58", "historyId": "34796f51bbac2dd276e43f3f11769340", "testCaseId": "a8e048875d0df2fe74c4bdd8a92d25b4", "fullName": "tests.images.test_images.TestImages#test_get_image_invalid_id", "labels": [{"name": "parentSuite", "value": "tests.images"}, {"name": "suite", "value": "test_images"}, {"name": "subSuite", "value": "TestImages"}, {"name": "host", "value": "M_Galimov_PC"}, {"name": "thread", "value": "1324-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.images.test_images"}]}